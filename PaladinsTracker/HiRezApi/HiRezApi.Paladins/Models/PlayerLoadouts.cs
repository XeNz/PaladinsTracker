// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace HiRezApi.Paladins.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using HiRezApi.Common.Models;

    public partial class PlayerLoadouts : BaseModel
    {
        /// <summary>
        /// Initializes a new instance of the PlayerLoadouts class.
        /// </summary>
        public PlayerLoadouts()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PlayerLoadouts class.
        /// </summary>
        public PlayerLoadouts(string retMsg, int championId = default(int), string championName = default(string), int deckId = default(int), string deckName = default(string), IList<PlayerLoadouts> loadoutItems = default(IList<PlayerLoadouts>), int playerId = default(int), string playerName = default(string))
            : base(retMsg)
        {
            ChampionId = championId;
            ChampionName = championName;
            DeckId = deckId;
            DeckName = deckName;
            LoadoutItems = loadoutItems;
            PlayerId = playerId;
            PlayerName = playerName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ChampionId")]
        public int ChampionId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ChampionName")]
        public string ChampionName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DeckId")]
        public int DeckId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DeckName")]
        public string DeckName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LoadoutItems")]
        public IList<PlayerLoadouts> LoadoutItems { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "playerId")]
        public int PlayerId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "playerName")]
        public string PlayerName { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
            if (LoadoutItems != null)
            {
                foreach (var element in LoadoutItems)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
