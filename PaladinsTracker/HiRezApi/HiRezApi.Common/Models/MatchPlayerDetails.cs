// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace HiRezApi.Common.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class MatchPlayerDetails : BaseModel
    {
        /// <summary>
        /// Initializes a new instance of the MatchPlayerDetails class.
        /// </summary>
        public MatchPlayerDetails()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MatchPlayerDetails class.
        /// </summary>
        public MatchPlayerDetails(string retMsg, int accountLevel = default(int), int championId = default(int), string championName = default(string), int masteryLevel = default(int), int match = default(int), string queue = default(string), int skinId = default(int), int tier = default(int), object playerCreated = default(object), int playerId = default(int), string playerName = default(string), int taskForce = default(int), int tierLosses = default(int), int tierWins = default(int))
            : base(retMsg)
        {
            AccountLevel = accountLevel;
            ChampionId = championId;
            ChampionName = championName;
            MasteryLevel = masteryLevel;
            Match = match;
            Queue = queue;
            SkinId = skinId;
            Tier = tier;
            PlayerCreated = playerCreated;
            PlayerId = playerId;
            PlayerName = playerName;
            TaskForce = taskForce;
            TierLosses = tierLosses;
            TierWins = tierWins;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Account_Level")]
        public int AccountLevel { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ChampionId")]
        public int ChampionId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ChampionName")]
        public string ChampionName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Mastery_Level")]
        public int MasteryLevel { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Match")]
        public int Match { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Queue")]
        public string Queue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SkinId")]
        public int SkinId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Tier")]
        public int Tier { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "playerCreated")]
        public object PlayerCreated { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "playerId")]
        public int PlayerId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "playerName")]
        public string PlayerName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "taskForce")]
        public int TaskForce { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tierLosses")]
        public int TierLosses { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tierWins")]
        public int TierWins { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
